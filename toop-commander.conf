#General configuration for toop-connector.
#Read about HOCON

toop-commander {
  cliEnabled = true

  dcPort = 8091
  dcPort = ${?DC_PORT}

  dcEnabled = true
  dcEnabled = ${?DC_ENABLED}

  dpPort = 8092
  dpPort = ${?DP_PORT}

  dpEnabled = true
  dpEnabled = ${?DP_ENABLED}

  # toop connector related properties
  connector {
    from-dc-host = "localhost"
    from-dc-port = "9090"
    from-dp-host = "localhost"
    from-dp-port = "9090"

    #give a chance to the possible env variables (or jvm args)
    from-dc-host = ${?FROM_DC_HOST}
    from-dc-port = ${?FROM_DC_PORT}
    from-dp-host = ${?FROM_DP_HOST}
    from-dp-port = ${?FROM_DP_PORT}

    #this (DC connector) is also used for DP queries
    dcConnectorBaseURL = "http://"${toop-commander.connector.from-dc-host}":"${toop-commander.connector.from-dc-port}

    dpConnectorBaseURL = "http://"${toop-commander.connector.from-dp-host}":"${toop-commander.connector.from-dp-port}

    from-dc-url = ${toop-commander.connector.dcConnectorBaseURL}"/from-dc"
    from-dp-url = ${toop-commander.connector.dpConnectorBaseURL}"/from-dp"
  }

  security {
    #the keystore that contains keys for creating an asic file
    keystore = "data/toop-commander.pfx"
    #try ARGS or ENV
    keystore = ${?KEYSTORE}


    #keystore password
    keystorePassword = "123456"
    #try ARGS or ENV
    keystorePassword = ${?KEYSTORE_PASSWORD}


    # alias for the key
    keyAlias = "toop-commander"
    #try ARGS or ENV
    keyAlias = ${?KEY_ALIAS}


    # password for the key (generally the same as the keystore password)
    keyPassword = "123456"
    #try ARGS or ENV
    keyPassword = ${?KEY_PASSWORD}
  }

  test {
    #a timeout setting for waiting for a test step
    testStepWaitTimeout = 30000
    testStepWaitTimeout = ${?TEST_STEP_WAIT_TIMEOUT}
  }
}
